<defaults >
/ screencolor = (127,127,127) 
/ canvasaspectratio = (16,9)
</defaults>

<values>
	/which_place = ""
	/num_trials = 40
	/num_prac_trials = 4
	/num_catch_trials = 12
	/Index = 0
	/test = 0
	/size = 25%
	/center_size = 12.5%//size of patches in the center
	/patch_size = 0//save the size of presented patch
	/order = 0
	/Index_odd_practice = 0
	/Index_even_practice = 0
	/x_coordinate = 0
	/y_coordinate = 0
	/patch_ID = 0
	/probe_Image = 0
	/CongOrIncong = 0
	/Patch_Source = 0
	/Exist_Object = 0
	/Patch_Position = 0
	
	/random_patch_position = 0
	/counter_1 = 0
	/counter_2 = 0
	
	/Image_ID = 0
	/order_question = 0
	/number_of_patch = 0
	/question_choose = 0
	/null_index = 0 
	/null_loc_1 = 0
	/null_loc_2 = 0
	/null_loc_3 = 0
	/null_loc_4 = 0
	/null_loc_5 = 0
	/null_loc_6 = 0
	/null_loc_7 = 0
	/null_loc_8 = 0
	/null_loc_9 = 0
	/null_loc_10 = 0
	/null_loc_11 = 0
	/null_loc_12 = 0
	/presentation_time = 0
	/catch_trial_1 = 5
	/catch_trial_2 = 8
	/catch_trial_3 = 12
	/catch_trial_4 = 14
	/catch_trial_5 = 20
	/catch_trial_6 = 23
	/catch_trial_7 = 27
	/catch_trial_8 = 30
	/catch_trial_9 = 35
	/catch_trial_10 = 37
	/catch_trial_11 = 40
	/catch_trial_12 = 42
	/question = 0
	/catch_question = 0
	/OLIFE_subscale_1_score = 0
	/OLIFE_subscale_2_score = 0
	/OLIFE_subscale_3_score = 0
	/OLIFE_subscale_4_score = 0
</values>


*********************************************************************************************************************************
*********************************************************************************************************************************
													Formal Experiment
*********************************************************************************************************************************
*********************************************************************************************************************************
<trial Fixation>
	/ stimulusframes = [1 = cross]
	/ timeout = 500
	/ recorddata = false
	/ branch = [
		trial.image_presentation
	]
</trial>


<counter image_presentation_order>
/ select = noreplace(1-43)
</counter>

*******
present the large image on the screen
*******

<trial image_presentation>
/ ontrialbegin = [
	values.order = counter.image_presentation_order.selectedvalue;
	picture.SquarePresent_present.insertitem(picture.SquarePresent.item(values.order),1);
	trial.image_presentation.insertstimulusframe(picture.SquarePresent_present,1);
	values.Index += 1;
	
	if (values.Index == 1){
		values.presentation_time = 2000
	}else if (values.Index == 2){
		values.presentation_time = 2000
	}else{
		values.presentation_time = 2000
	}
]
	/ stimulusframes = []
	/ timeout = values.presentation_time
	/ recorddata = false
	/ branch = [
	trial.Masking_present
]


	/ ontrialend = [
	picture.SquarePresent_present.clearitems();
	trial.image_presentation.clearstimulusframes();
	
	values.order_question = 0;
	values.response = 0;
	values.p_confidence = 0;
	values.patch_ID = 0;
	values.null_index = 0;
	if (item.CongOrIncong.item(values.order) == "Cong"){
		values.CongOrIncong = 0;
	}else if (item.CongOrIncong.item(values.order) == "Incong"){
		values.CongOrIncong = 1;
	}
	values.Image_ID = item.Image_ID.item(values.order);
]
</trial>

<trial Masking_present>
	/ stimulustimes = [0 = Masking_picture_1; 60 = Masking_picture_2; 120 = Masking_picture_3;180 = Masking_picture_4; 240 = Masking_picture_5]
	/ timeout = 300;
	/ recorddata = false
</trial>

**********************************************Step 4: Patch Present Step********************************************************
1. Prepare random data for patches and questions                                    


***changed this from 1-9 to 1-12
<counter random_patch_position>
/select = noreplace(1-12)
</counter>

<counter counter_1>
/ select = replace(1-6)
</counter>

<counter counter_2>
/ select = noreplace(1-2)
</counter>



<trial fixation_2nd>
	/ stimulusframes = [1 = cross]
	/ timeout = 500
	/ recorddata = false
	/ ontrialend = [
	values.number_of_patch = 6;
]
	/ branch = [
	trial.Patch_present;
]
</trial>


*******
1. Present_image_patch_step = show image 
2. Patch_locate_x_present = show location image that covers the big image, only leaving a square in the right location behind
*******
<trial Patch_present>
	/ ontrialbegin = [
	values.response = 0;
	values.p_confidence = 0;
	values.null_index = 0;
	
	values.random_patch_position = counter.random_patch_position.selectedvalue;
	
	values.counter_1 = counter.counter_1.selectedvalue;
	values.counter_2 = counter.counter_2.selectedvalue;
	
	if(values.counter_1 == 103 || values.counter_1 == 104 ){
	
	//works
	//unsure difference between this and original object patch
	//for counter 1 = 2 or 3
		if (values.random_patch_position == 1) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
		
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_1_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);			
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.Patch_Position = 1;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			values.null_index = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
			}
			
		}else if (values.random_patch_position == 2) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_2_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_2;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.Patch_Position = 2;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 3) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_3_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.Patch_Position = 3;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			values.null_index = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 4) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_4_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_2;
			values.patch_size = values.size;
			values.Patch_Position = 4;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 5) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_5_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_2;
			values.patch_size = values.size;
			values.Patch_Position = 5;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 6) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_6_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.Patch_Position = 6;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 7) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_7_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_2;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.Patch_Position = 7;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 8) {
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_8_present,1);
			trial.Patch_present.insertstimulusframe(text.cross,1);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.Patch_Position = 8;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 9) {
			
			
			trial.Patch_present.insertstimulusframe(text.cross,1);
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_9_present,1);
			
			values.x_coordinate = values.location_horizontal_4;
			values.y_coordinate = values.location_vertical_4;
			values.patch_size = values.center_size;
			values.Patch_Position = 9;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 10) {
			
			trial.Patch_present.insertstimulusframe(text.cross,1);
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_10_present,1);
			
			values.x_coordinate = values.location_horizontal_5;
			values.y_coordinate = values.location_vertical_4;
			values.patch_size = values.center_size;
			values.Patch_Position = 10;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 11) {
			
			trial.Patch_present.insertstimulusframe(text.cross,1);
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_11_present,1);
			values.x_coordinate = values.location_horizontal_4;
			values.y_coordinate = values.location_vertical_5;
			values.patch_size = values.center_size;
			values.Patch_Position = 11;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		}else if (values.random_patch_position == 12) {
			
			
			trial.Patch_present.insertstimulusframe(text.cross,1);
			picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
			trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
			trial.Patch_present.insertstimulusframe(picture.Patch_locate_12_present,1);
			values.x_coordinate = values.location_horizontal_5;
			values.y_coordinate = values.location_vertical_5;
			values.patch_size = values.center_size;
			values.Patch_Position = 12;
			values.patch_ID += 1;
			values.Exist_Object = 0;
			if(item.CongOrIncong.item(values.order) == "Cong"){
				values.Patch_Source = 2;
			}else if(item.CongOrIncong.item(values.order) == "Incong"){
				values.Patch_Source = 3;
			}
		
		
		}
	
	}//cp patch case
	//if counter 1 == 1 and counter 2 == 2
	else if(values.counter_1 == 1 || values.counter_2 == 2){
		picture.CP_patch_present.insertitem(picture.CP_patch.item(values.order),1);
		trial.Patch_present.insertstimulusframe(text.cross, 1);
		trial.Patch_present.insertstimulusframe(picture.CP_patch_present, 2);
		values.x_coordinate = item.CP_x_coordinates.item(values.order);
		values.y_coordinate = item.CP_y_coordinates.item(values.order);
		values.patch_ID += 1;
		if(item.CongOrIncong.item(values.order) == "Cong"){
			values.Patch_Source = 2;
		}else if(item.CongOrIncong.item(values.order) == "Incong"){
			values.Patch_Source = 3;
		}
		
		values.Exist_Object = 1;

		if(item.CP_x_coordinates.item(values.order) == "33.3%" && item.CP_y_coordinates.item(values.order) == "25%"){
			values.Patch_Position = 1;
		}else if(item.CP_x_coordinates.item(values.order) == "50%" && item.CP_y_coordinates.item(values.order) == "25%"){
			values.Patch_Position = 2;
		}else if(item.CP_x_coordinates.item(values.order) == "66.7%" && item.CP_y_coordinates.item(values.order) == "25%"){
			values.Patch_Position = 3;
		}else if(item.CP_x_coordinates.item(values.order) == "33.3%" && item.CP_y_coordinates.item(values.order) == "50%"){
			values.Patch_Position = 4;
		}else if(item.CP_x_coordinates.item(values.order) == "66.7%" && item.CP_y_coordinates.item(values.order) == "50%"){
			values.Patch_Position = 5;
		}else if(item.CP_x_coordinates.item(values.order) == "33.3%" && item.CP_y_coordinates.item(values.order) == "75%"){
			values.Patch_Position = 6;
		}else if(item.CP_x_coordinates.item(values.order) == "50%" && item.CP_y_coordinates.item(values.order) == "75%"){
			values.Patch_Position = 7;
		}else if(item.CP_x_coordinates.item(values.order) == "66.7%" && item.CP_y_coordinates.item(values.order) == "75%"){
			values.Patch_Position = 8;
		}else if(item.CP_x_coordinates.item(values.order) == "45.83%" && item.CP_y_coordinates.item(values.order) == "43.75%"){
			values.Patch_Position = 9;
		}else if(item.CP_x_coordinates.item(values.order) == "54.17%" && item.CP_y_coordinates.item(values.order) == "43.75%"){
			values.Patch_Position = 10;
		}else if(item.CP_x_coordinates.item(values.order) == "45.83%" && item.CP_y_coordinates.item(values.order) == "56.25%"){
			values.Patch_Position = 11;
		}else if(item.CP_x_coordinates.item(values.order) == "54.17%" && item.CP_y_coordinates.item(values.order) == "56.25%"){
			values.Patch_Position = 12;
		}
	
	
	}if(values.counter_1 == 100 || values.counter_1 == 101 || values.counter_1 == 102 ){
	//below works
	//null patch case, so if counter 1 = 4-6
		if (values.random_patch_position == 1) {

			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_1_resource, 2);
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 1;
			values.null_loc_1 += 1;
			values.null_index = values.null_loc_1;
			
		} if (values.random_patch_position == 2) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_2_resource, 2);
			values.x_coordinate = values.location_horizontal_2;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 2;	
			values.null_loc_2 += 1;
			values.null_index = values.null_loc_2;
			
		} if (values.random_patch_position == 3) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_3_resource, 2);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_1;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 3;
			values.null_loc_3 += 1;
			values.null_index = values.null_loc_3;		
		
		} if (values.random_patch_position == 4) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_4_resource, 2);
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_2;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 4;
			values.null_loc_4 += 1;
			values.null_index = values.null_loc_4;	
		} if (values.random_patch_position == 5) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_5_resource, 2);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_2;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 5;
			values.null_loc_5 += 1;
			values.null_index = values.null_loc_5;	
		} if (values.random_patch_position == 6) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_6_resource, 2);
			values.x_coordinate = values.location_horizontal_1;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 6;
			values.null_loc_6 += 1;
			values.null_index = values.null_loc_6;	
		} if (values.random_patch_position == 7) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_7_resource, 2);
			values.x_coordinate = values.location_horizontal_2;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 7;
			values.null_loc_7 += 1;
			values.null_index = values.null_loc_7;		
		} if (values.random_patch_position == 8) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_8_resource, 2);
			values.x_coordinate = values.location_horizontal_3;
			values.y_coordinate = values.location_vertical_3;
			values.patch_size = values.size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 8;
			values.null_loc_8 += 1;
			values.null_index = values.null_loc_8;	
		} if (values.random_patch_position == 9) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_9_resource, 2);
			values.x_coordinate = values.location_horizontal_4;
			values.y_coordinate = values.location_vertical_4;
			values.patch_size = values.center_size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 9;
			values.null_loc_9 += 1;
			values.null_index = values.null_loc_9;
		} if (values.random_patch_position == 10) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_10_resource, 2);
			values.x_coordinate = values.location_horizontal_5;
			values.y_coordinate = values.location_vertical_4;
			values.patch_size = values.center_size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 10;
			values.null_loc_10 += 1;
			values.null_index = values.null_loc_10;	
		} if (values.random_patch_position == 11) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_11_resource, 2);
			values.x_coordinate = values.location_horizontal_4;
			values.y_coordinate = values.location_vertical_5;
			values.patch_size = values.center_size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 11;
			values.null_loc_11 += 1;
			values.null_index = values.null_loc_11;		
		} if (values.random_patch_position == 12) {
			trial.Patch_present.insertstimulusframe(text.cross, 1);
			trial.Patch_present.insertstimulusframe(picture.nPatch_locate_12_resource, 2);
			values.x_coordinate = values.location_horizontal_5;
			values.y_coordinate = values.location_vertical_5;
			values.patch_size = values.center_size;
			values.patch_ID += 1;
			values.Patch_Source = 1;
			values.Exist_Object = 0;
			values.Patch_Position = 12;
			values.null_loc_12 += 1;
			values.null_index = values.null_loc_12;		
		}
		
		
	//this works
	//presents correct patch from the image
	//for case of counter 1 = 1 and counter 2 = 1
	}else if(values.counter_1 == 1 && values.counter_2 == 1){
	
		if (values.random_patch_position == 1) {
				
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1); 
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_1_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				
				
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_1;
				values.y_coordinate = values.location_vertical_1;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 1;
			
		}else if(values.random_patch_position == 2){
				
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_2_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_2;
				values.y_coordinate = values.location_vertical_1;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 2;
		
		
				
				values.Patch_Position = 1;
				
		}else if(values.random_patch_position == 3){
				
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_3_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_3;
				values.y_coordinate = values.location_vertical_1;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 3;
			

		}else if(counter.random_patch_position == 4){
				
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_4_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);

				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_1;
				values.y_coordinate = values.location_vertical_2;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 4;

				
		}else if(values.random_patch_position == 5){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_5_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_3;
				values.y_coordinate = values.location_vertical_2;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				values.Patch_Position = 5;
				values.null_index = 0;
				
		}else if(values.random_patch_position == 6){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_6_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_1;
				values.y_coordinate = values.location_vertical_3;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				values.Patch_Position = 6;
				//values.null_index = 0;	
				
		}else if(values.random_patch_position == 7){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_7_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_2;
				values.y_coordinate = values.location_vertical_3;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				values.Patch_Position = 7;
				//values.null_index = 0;
				
		}else if(values.random_patch_position == 8){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_8_present,1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_3;
				values.y_coordinate = values.location_vertical_3;
				values.patch_size = values.size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				values.Patch_Position = 8;
				
		}else if(values.random_patch_position == 9){

				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(text.cross,1);


				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_9_present,1);
				


				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_4;
				values.y_coordinate = values.location_vertical_4;
				values.patch_size = values.center_size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 9; 
		}else if(values.random_patch_position == 10){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(text.cross,1);

				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_10_present,1);

				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_5;
				values.y_coordinate = values.location_vertical_4;
				values.patch_size = values.center_size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 10; 
		}else if(values.random_patch_position == 11){
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);

				trial.Patch_present.insertstimulusframe(picture.Patch_locate_11_present,1);

				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_4;
				values.y_coordinate = values.location_vertical_5;
				values.patch_size = values.center_size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 11; 
		}else {
				picture.Present_image_patch_step.insertitem(picture.SquarePresent.item(values.order),1);
				trial.Patch_present.insertstimulusframe(text.cross,1);
				trial.Patch_present.insertstimulusframe(picture.Present_image_patch_step,1);
				trial.Patch_present.insertstimulusframe(picture.Patch_locate_12_present,1);
				

				
				values.patch_ID += 1;
				values.x_coordinate = values.location_horizontal_5;
				values.y_coordinate = values.location_vertical_5;
				values.patch_size = values.center_size;
				values.Exist_Object = 1;
				if(item.CongOrIncong.item(values.order) == "Cong"){
					values.Patch_Source = 2;
				}else if(item.CongOrIncong.item(values.order) == "Incong"){
					values.Patch_Source = 3;
				}
				
				values.Patch_Position = 12; 
			}	
		}
	
]

	/ stimulusframes = []
	/ timeout = values.presentation_time
	/ recorddata = false
	/ ontrialend = [
	trial.Patch_present.clearstimulusframes();
	picture.Present_image_patch_step.clearitems();
	
]
//add conditioning branches to mask patches of different sizes	
	/ branch = [
		if(values.patch_size==25%)
	    trial.mask_periphery]
	/ branch = [
	    if(values.patch_size==12.5%)
		trial.mask_center]
		
</trial>



******************************************************************************************************************************************************************************************************
******************************************************************************************************************************************************************************************************
Trial for masking on the patches
<trial mask_periphery>
	/ stimulustimes = [0 = cross,Masking_periphery_1;60 = cross,Masking_periphery_2;120 = cross,Masking_periphery_3;180 = cross,Masking_periphery_4;240 = cross,Masking_periphery_5]
	/ timeout = 300
	/ recorddata = false
	/ branch = [
	trial.peripheral_response
]
</trial>

<trial mask_center>
	/ stimulustimes = [0 = cross,Masking_center_1;60 = cross,Masking_center_2;120 = cross,Masking_center_3;180 = cross,Masking_center_4;240 = cross,Masking_center_5]
	/ timeout = 300
	/ recorddata = false
	/ branch = [
	trial.peripheral_response
]
</trial>
******************************************************************************************************************************************************************************************************
******************************************************************************************************************************************************************************************************

******************************************************************************************************************************************************************************************************
******************************************************************************************************************************************************************************************************

<trial peripheral_response>
/ ontrialbegin = [
	values.order_question += 1;
]
/ stimulusframes = [
	1  = response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d, response_blank,
lowC_instruction, highC_instruction,part_of_Image,Not_part_of_Image,p_response_instructions
]
/ validresponse = (response_blank, response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d)
/ inputdevice = mouse
/ isvalidresponse = [if (trial.peripheral_response.response == "response_blank") false; else
expressions.validresponse_disks
]
/ recorddata = true
/ branch = [
	trial.centermouse
]
</trial>

<trial centermouse>
/ stimulusframes = [1  = response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d, response_blank,
lowC_instruction, highC_instruction,part_of_Image,Not_part_of_Image,centersquare,notice_centre_mouse,process_notice]
/ inputdevice = mouse
/ recorddata = false
/ validresponse = (centersquare)
</trial>

******************************************************************************************************************************************************************************************************
																TRIAL REMINDER
******************************************************************************************************************************************************************************************************
<trial interval_message>
/ stimulusframes = [1 = interval,quit_notice,Next_button]
/ validresponse = (57)
/ recorddata = false
</trial>

******************************************************************************************************************************************************************************************************
																CATCH TRIAL
******************************************************************************************************************************************************************************************************


<trial Catch_fixation>
	/ stimulusframes = [1 = cross]
	/ timeout = 500
	/ recorddata = false
	/ branch = [
		trial.catch_presentation
	]
</trial>

<trial catch_presentation>
/ stimulusframes = [1 = Catch]
/ timeout = 133
/ recorddata = false
/ ontrialend = [
	]
</trial>

<trial catch_present_trial>
/ ontrialbegin = [values.catch_question = round(rand(1, 4));

]
/ stimulusframes = [
	1 = response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d, response_blank,
lowC_instruction, highC_instruction,part_of_Image,Not_part_of_Image,catch_response_instructions;
	2 = list.catch_present_words;
	]
/ inputdevice = mouse
/ validresponse = (response_blank, response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d)
/ isvalidresponse = [if (trial.peripheral_response.response == "response_blank") false; else
expressions.validresponse_disks
]
/ ontrialend = [values.Exist_Object = values.catch_question;
				values.Patch_Source = 0;
				values.Image_ID = 0;
				values.Patch_Position = 0;
				values.random_patch_position = 0;
				values.null_index = 0;
				values.patch_ID = 0;
				values.CongOrIncong = 0;
				values.Index += 1;
]
/ branch = [
	trial.centermouse]
</trial>

<trial catch_absent_trial>
/ ontrialbegin = [ values.question = round(rand(1, 4))
	]

/ stimulusframes = [
	1 = response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d, response_blank,
lowC_instruction, highC_instruction,part_of_Image,Not_part_of_Image,catch_response_instructions;
	2 = list.catch_absent_words;
	]
/ inputdevice = mouse
/ validresponse = (response_blank, response1d, response2d, response3d, response4d, response5d, response6d, response7d, response8d)
/ isvalidresponse = [if (trial.peripheral_response.response == "response_blank") false; else
expressions.validresponse_disks
]
/ ontrialend = [ 
		values.Exist_Object = values.catch_question;
		values.Patch_Source = 0;
		values.Image_ID = 0;
		values.Patch_Position = 0;
		values.random_patch_position = 0;
		values.null_index = 0;
		values.patch_ID = 0;
		values.CongOrIncong = 0;
		values.Index += 1;	
]
/ branch = [
	trial.centermouse
]
</trial>

<trial catch_interval_message>
/ stimulusframes = [1 = catch_interval,quit_notice]
/ validresponse = (57)
/ recorddata = false
</trial>

******************************************************************************************************************************************************************************************************
														DEFINE TRIAL STRUCTURE
******************************************************************************************************************************************************************************************************
<block test>
	/ trials = [1 = trial.Fixation; 2-7 = trial.fixation_2nd;8 = interval_message]
</block>

<block test_prac>
	/ trials = [1 = trial.Fixation; 2-7 = trial.fixation_2nd]
</block>

<block catch>
	/ trials = [1 = trial.Catch_fixation; 2 = noreplace(trial.catch_present_trial,trial.catch_absent_trial); 3 = catch_interval_message]
</block>



<block demographics>
/trials = [1 = demographics_page]
</block>


// Used to determine which type of test block will be shown throughout the experiment, depending on the assigned catch_trial number and current Index.
<list test_select>
/ items = (block.test, block.catch)
/ selectionrate = always
/ selectionmode = 	
	if (values.Index == values.catch_trial_1 || values.Index == values.catch_trial_2 ||
	values.Index == values.catch_trial_3 || values.Index == values.catch_trial_4 || 
	values.Index == values.catch_trial_5 ||values.Index == values.catch_trial_6 ||
	values.Index == values.catch_trial_7 || values.Index == values.catch_trial_8 ||
	values.Index == values.catch_trial_9 || values.Index == values.catch_trial_10 || 
	values.Index == values.catch_trial_11 ||values.Index == values.catch_trial_12){
		2;
	}
	else {
		1;
	}
</list>

<expt Throughout>
/ preinstructions = (start)
/ postinstructions = (end)
/ blocks = [
1 = Instruction;
2 = test_prac;
3 = attention1;
4 = test_prac;
5 = attention1;
6 = test_prac;
7 = attention2;
8 = catch;
9 = attention3;
10-61 = list.test_select;
62 = demographics;]
</expt>

<data>
/ columns=[subject,values.Index,values.patch_ID,values.CongOrIncong,values.Patch_Source,values.Exist_Object,values.Patch_Position, values.patch_size, values.which_place,
			values.response,values.p_confidence,latency,values.Image_ID,values.null_index, values.OLIFE_subscale_1_score,
			values.OLIFE_subscale_2_score,values.OLIFE_subscale_3_score,values.OLIFE_subscale_4_score, response]
/ separatefiles = true
</data>



